{
  "exercises": [
    {
      "question": "Γράψτε μία συνάρτηση που υπολογίζει τη n-οστή τιμή του Fibonacci χρησιμοποιώντας αναδρομή.",
      "hint": "Η τιμή Fibonacci(n) υπολογίζεται ως Fibonacci(n-1) + Fibonacci(n-2).",
      "starterCode": "def fibonacci(n):\n    # Υπολογίστε την n-οστή τιμή Fibonacci\n"
    },
    {
      "question": "Γράψτε έναν αλγόριθμο που εφαρμόζει την ταξινόμηση γρήγορης ταξινόμησης (QuickSort).",
      "hint": "Επιλέξτε ένα pivot και χωρίστε τα δεδομένα σε μικρότερα και μεγαλύτερα του pivot.",
      "starterCode": "def quicksort(arr):\n    # Υλοποιήστε την ταξινόμηση QuickSort\n"
    },
    {
      "question": "Γράψτε μία συνάρτηση που υπολογίζει τη δυαδική αναπαράσταση ενός αριθμού.",
      "hint": "Χρησιμοποιήστε αναδρομή ή βρόχο για να βρείτε τα υπόλοιπα της διαίρεσης με το 2.",
      "starterCode": "def to_binary(n):\n    # Μετατρέψτε τον αριθμό n σε δυαδικό\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που βρίσκει τη μικρότερη διαδρομή σε έναν γράφο χρησιμοποιώντας τον αλγόριθμο Dijkstra.",
      "hint": "Χρησιμοποιήστε μία ουρά προτεραιότητας για να βρείτε τις μικρότερες διαδρομές.",
      "starterCode": "def dijkstra(graph, start):\n    # Υπολογίστε τις μικρότερες διαδρομές από τον κόμβο start\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που διαβάζει δεδομένα από ένα αρχείο CSV και εκτυπώνει τη μέση τιμή μιας στήλης.",
      "hint": "Χρησιμοποιήστε τη βιβλιοθήκη csv για ανάγνωση αρχείων.",
      "starterCode": "import csv\n\ndef calculate_mean(file_path, column_name):\n    # Υπολογίστε τη μέση τιμή της στήλης\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που υλοποιεί έναν αλγόριθμο εύρεσης του μέγιστου υποπίνακα (Kadane's Algorithm).",
      "hint": "Κρατήστε τρέχουσα τιμή μέγιστου αθροίσματος και παγκόσμιο μέγιστο.",
      "starterCode": "def max_subarray(arr):\n    # Υλοποιήστε τον αλγόριθμο Kadane\n"
    },
    {
      "question": "Γράψτε μία συνάρτηση που βρίσκει τη διαδρομή Euler σε έναν γράφο.",
      "hint": "Μία διαδρομή Euler περνάει από κάθε ακμή του γράφου μία μόνο φορά.",
      "starterCode": "def euler_path(graph):\n    # Βρείτε τη διαδρομή Euler\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που εφαρμόζει την αναζήτηση δυαδικής δένδρου (Binary Search Tree).",
      "hint": "Χρησιμοποιήστε αναδρομή για εισαγωγή και αναζήτηση κόμβων.",
      "starterCode": "class Node:\n    def __init__(self, value):\n        self.value = value\n        self.left = None\n        self.right = None\n\n# Υλοποιήστε τη λειτουργικότητα του δυαδικού δένδρου\n"
    },
    {
      "question": "Γράψτε έναν αλγόριθμο που βρίσκει το ελάχιστο κοινό πολλαπλάσιο (ΕΚΠ) δύο αριθμών.",
      "hint": "Χρησιμοποιήστε τον ΜΚΔ (Μέγιστο Κοινό Διαιρέτη).",
      "starterCode": "def lcm(a, b):\n    # Υπολογίστε το ΕΚΠ\n"
    },
    {
      "question": "Γράψτε μία συνάρτηση που υλοποιεί τη δυναμική προγραμματιστική λύση για το πρόβλημα του σακιδίου (Knapsack Problem).",
      "hint": "Χρησιμοποιήστε έναν πίνακα για να αποθηκεύσετε τις μέγιστες τιμές για κάθε συνδυασμό βάρους.",
      "starterCode": "def knapsack(weights, values, capacity):\n    # Υλοποιήστε τη δυναμική προγραμματιστική λύση\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που βρίσκει τον αριθμό των μοναδικών στοιχείων σε μία λίστα.",
      "hint": "Χρησιμοποιήστε ένα σύνολο για να αποθηκεύσετε μοναδικές τιμές.",
      "starterCode": "def count_unique_elements(arr):\n    # Υπολογίστε τον αριθμό των μοναδικών στοιχείων\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που υλοποιεί την ένωση και τη τομή δύο συνόλων.",
      "hint": "Χρησιμοποιήστε τις ενσωματωμένες λειτουργίες set().",
      "starterCode": "def set_operations(set1, set2):\n    # Υλοποιήστε την ένωση και την τομή\n"
    },
    {
      "question": "Γράψτε μία συνάρτηση που ελέγχει αν μία συμβολοσειρά έχει αντιστοιχισμένες παρενθέσεις.",
      "hint": "Χρησιμοποιήστε μία στοίβα για να παρακολουθείτε το άνοιγμα και το κλείσιμο των παρενθέσεων.",
      "starterCode": "def is_balanced(string):\n    # Ελέγξτε αν οι παρενθέσεις είναι ισορροπημένες\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που υλοποιεί την εύρεση του κύκλου Hamilton σε έναν γράφο.",
      "hint": "Χρησιμοποιήστε αναδρομή για να βρείτε έναν κύκλο που περνάει από κάθε κόμβο μία φορά.",
      "starterCode": "def hamilton_cycle(graph):\n    # Υλοποιήστε την εύρεση κύκλου Hamilton\n"
    },
    {
      "question": "Γράψτε έναν κώδικα που βρίσκει το μέγιστο κέρδος από αγορά και πώληση μετοχών δεδομένων τιμών ανά ημέρα.",
      "hint": "Βρείτε τη διαφορά ανάμεσα στην ελάχιστη τιμή και τη μέγιστη τιμή μετά από αυτήν.",
      "starterCode": "def max_profit(prices):\n    # Υπολογίστε το μέγιστο κέρδος\n"
    }
  ]
}
